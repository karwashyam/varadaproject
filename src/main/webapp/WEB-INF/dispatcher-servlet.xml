<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<!-- <mvc:annotation-driven /> -->
<mvc:annotation-driven ignoreDefaultModelOnRedirect="true" />

<context:component-scan base-package="com.webapp" />

<aop:aspectj-autoproxy /> 

<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
</bean>

<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
      <property name="order" value="1" />
      <property name="mediaTypes">
        <map>
           <entry key="json" value="application/json" />
           <entry key="xml" value="application/xml" />
        </map>
      </property>
      <property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<!-- see http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/web/servlet/view/json/MappingJacksonJsonView.html#setExtractValueFromSingleKeyModel(boolean) -->
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean> 				
			</list>
		</property>
</bean>    
 <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
<mvc:resources mapping="/resources/**" location="/resources/" />

<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>i18n/messages</value>
		</property>
</bean>

<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 		<property name="locations">
	        <list>	                     
	            <value>classpath:project.properties</value>
	        </list>
        </property>
</bean>

<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
       <property name="driver" value="${db.driver}" />  
       <property name="url" value="${db.path}" />  
       <property name="username" value="${db.username}" />  
       <property name="password" value ="${db.password}" /> 
       <property name="poolPingQuery" value="${db.PoolPingQuery}"/>
	   <property name="poolPingEnabled" value="${db.PoolPingEnabled}" /> 
	   <property name="poolMaximumActiveConnections" value="${db.PoolMaximumActiveConnections}"/>
	   <property name="poolMaximumIdleConnections" value="${db.PoolMaximumIdleConnections}" /> 
	   
</bean>

<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:/mybatis-config/mybatis-config.xml">
		</property>
		<property name="dataSource" ref="dataSource"></property>
</bean>	

<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg index="0" ref="sqlSessionFactory" />
</bean>

<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.webapp.daos" />
</bean>

<tx:annotation-driven transaction-manager="transactionManager" />
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
</bean>

<!-- S3 server Configuration -->
<bean id="s3Utils" class="com.fnf.utils.S3Utils">
		<constructor-arg>
			<bean class="org.jets3t.service.impl.rest.httpclient.RestS3Service">
			<constructor-arg>
				<bean class="org.jets3t.service.security.AWSCredentials">
					<constructor-arg value="${S3AccessKey}"/>
					<constructor-arg value="${S3SecretKey}"/>
				</bean>
			</constructor-arg> 
			</bean>
		</constructor-arg> 						
			
</bean>  

<!-- Mobisoft bucket Configuration -->


 <bean id="fileUtils" class="com.fnf.utils.FileUtils">
							
		<property name="bucketProgram" value="${BucketProgram}"/>
		<property name="s3Utils" ref="s3Utils"/>
			
</bean>  

  <!-- Email Configuration -->

<bean id="mailUtils" class="com.fnf.utils.MailUtils">
							
		<property name="mailHost" value="${mail.server}"/>
		<property name="mailServerPort" value="${mail.serverPort}"/>
		<property name="defaultUsername" value="${mail.defaultUsername}"/>
		<property name="defaultPassword" value="${mail.defaultPassword}"/>
		<property name="defaultFrom" value="${mail.defaultFrom}"/>
		<property name="usingGmail" value="${mail.usingGmail}"/>
			
</bean>

<bean id="multipartResolver"  
  class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />  
  
<!-- <bean id="service" class="com.webapp.services.Service"/> -->
<!-- <bean id="logAspect" class="com.webapp.aspect.LoggingAspect" /> -->


</beans>

