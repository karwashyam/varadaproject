<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webapp.daos.UsersDao">
	
	<select id="fetchUsers" parameterType="JQTableUtils" resultType="UsersJsonDto">
		SELECT 
			user_id, user_name, user_full_name, user_city, email, referral_balance AS referralBalance, phone,
       		created_at, updated_at	
  		FROM users
  		WHERE record_status='A'
  		<if test="JQTableUtils.searchParams!=''">
			AND
			(
				user_id ilike #{JQTableUtils.searchParams}
				OR
				user_name ilike #{JQTableUtils.searchParams}
				OR
				user_full_name ilike #{JQTableUtils.searchParams}
				OR
				user_city ilike #{JQTableUtils.searchParams}
				OR
				email ilike #{JQTableUtils.searchParams}
				OR
				cast(referral_balance AS character varying) ilike #{JQTableUtils.searchParams}
				OR
				phone ilike #{JQTableUtils.searchParams}
			)
		</if>
		ORDER BY
		<choose>
			<when test="JQTableUtils.sortColumn == 1">
				user_id
			</when>
			<when test="JQTableUtils.sortColumn == 2">
				user_name
			</when>
			<when test="JQTableUtils.sortColumn == 3">
				phone
			</when>
			<when test="JQTableUtils.sortColumn == 4">
				email
			</when>
			<when test="JQTableUtils.sortColumn == 5">
				user_full_name
			</when>
			<when test="JQTableUtils.sortColumn == 6">
				user_city
			</when>
			<when test="JQTableUtils.sortColumn == 7">
				user_city
			</when>
			<when test="JQTableUtils.sortColumn == 8">
				created_at
			</when>
			<otherwise>
				created_at
			</otherwise>
		</choose>
		<choose>
			<when test="JQTableUtils.sortingDirection == 'asc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose> 

		<if test="JQTableUtils.iDisplayLength!=-1">
			LIMIT #{JQTableUtils.iDisplayLength}
			OFFSET #{JQTableUtils.iDisplayStart}
		</if>
		
	</select>
	
	
	<select id="fetchAllUsers" resultType="UsersJsonDto">
		SELECT 
			user_id,created_at	
  		FROM users
  		WHERE record_status='A'
	</select>
	
	<select id="fetchTotalUsers" parameterType="JQTableUtils" resultType="long">
		SELECT count(*)	
  		FROM users
  		WHERE record_status='A'
  		<if test="JQTableUtils.searchParams!=''">
			AND
			(
			user_id ilike #{JQTableUtils.searchParams}
			OR
			user_name ilike #{JQTableUtils.searchParams}
			OR
			user_full_name ilike #{JQTableUtils.searchParams}
			OR
			user_city ilike #{JQTableUtils.searchParams}
			OR
			email ilike #{JQTableUtils.searchParams}
			OR
			phone ilike #{JQTableUtils.searchParams}
			)
		</if>
		
	</select>
	
	<select id="fetchUserDetails" parameterType="String" resultType="UsersJsonDto">
		SELECT 
			user_id, user_name, user_full_name, user_city, email,  
			created_at, saree, gown, kurti, lehenga, dress_material, 
			update_frequency, catalogue_delivery, phone, referral_balance AS referralBalance
  		FROM users
  		WHERE record_status='A' AND user_id=#{user_id}
	</select>
	
	<update id="updateUsers" parameterType="UsersJsonDto">
		UPDATE users
   		SET  user_full_name=#{usersJsonDto.user_full_name}, user_city=#{usersJsonDto.user_city}, email=#{usersJsonDto.email}, 
	       saree=#{usersJsonDto.saree}, gown=#{usersJsonDto.gown}, 
	       kurti=#{usersJsonDto.kurti}, lehenga=#{usersJsonDto.lehenga}, dress_material=#{usersJsonDto.dress_material}, update_frequency=#{usersJsonDto.update_frequency}, 
	       catalogue_delivery=#{usersJsonDto.catalogue_delivery}, phone=#{usersJsonDto.phone}
  		WHERE record_status='A' AND user_id=#{usersJsonDto.user_id}
	</update>
	
	<resultMap id="referralHistoryResultMap" type="UserReferralHistory" >
		<result property="referralBalanceHistoryId" column="referral_balance_history_id" />
		<result property="userUsed" column="user_used" />
		<result property="amount" column="amount" />
		<result property="orderId" column="order_id" />
		<result property="userId" column="user_id" />
		<result property="historyNote" column="history_note" />
		<result property="userName" column="user_name" />
		
		<result property="recordStatus" column="record_status" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>
	
	<select id="getReferralHistoryOfUser" parameterType="JQTableUtils" resultMap="referralHistoryResultMap">
		SELECT 
			referral_balance_history_id, user_used, amount, order_id, rbh.user_id, 
		    history_note, rbh.created_at, rbh.updated_at, u.user_name
		FROM 
			referral_balance_history rbh
		INNER JOIN
			users u ON u.user_id = rbh.user_id
		WHERE 
			rbh.user_id = #{userId}
		AND
			rbh.record_status = 'A'
		<if test="JQTableUtils.searchParams != ''">
			AND
			(
				referral_balance_history_id ilike #{JQTableUtils.searchParams}
				OR
				user_used ilike #{JQTableUtils.searchParams}
				OR
				cast(amount AS character varying(50)) ilike #{JQTableUtils.searchParams}
				OR
				cast(order_id AS character varying(50)) ilike #{JQTableUtils.searchParams}
				OR
				rbh.user_id ilike #{JQTableUtils.searchParams}
				OR
				history_note ilike #{JQTableUtils.searchParams}
			)
		</if>
		ORDER BY
		<choose>
			<when test="JQTableUtils.sortColumn == 1">
				referral_balance_history_id
			</when>
			<when test="JQTableUtils.sortColumn == 2">
				user_used
			</when>
			<when test="JQTableUtils.sortColumn == 3">
				amount
			</when>
			<when test="JQTableUtils.sortColumn == 4">
				order_id
			</when>
			<when test="JQTableUtils.sortColumn == 5">
				rbh.user_id
			</when>
			<when test="JQTableUtils.sortColumn == 6">
				history_note
			</when>
			<when test="JQTableUtils.sortColumn == 7">
				rbh.created_at
			</when>
			<otherwise>
				rbh.created_at
			</otherwise>
		</choose>
		<choose>
			<when test="JQTableUtils.sortingDirection == 'asc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose> 

		<if test="JQTableUtils.iDisplayLength!=-1">
			LIMIT #{JQTableUtils.iDisplayLength}
			OFFSET #{JQTableUtils.iDisplayStart}
		</if>
	</select>
	
	
	<update id="updateUserWalletBalance" parameterType="map">
		UPDATE 
			users
   		SET
   			referral_balance = referral_balance + #{referralBalance}, updated_at = #{currentTime}
  		WHERE 
  			record_status = 'A' 
  		AND 
  			user_id = #{userId}
	</update>
	
	<select id="getDripMarketDetails" resultType="DripMarkettingDto">
		SELECT 
			drip_marketing_id as dripMarketingId, marketing_text as marketingText, in_days as inDays
  		FROM drip_marketing
  		WHERE record_status='A'
  		ORDER BY in_days ASC
	</select>
</mapper>