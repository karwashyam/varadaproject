<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webapp.daos.BookingDao">

	<resultMap id="BookingMap" type="BookingModel" >
		<result property="bookingId" column ="booking_id" />
		<result property="bookingCode" column ="booking_code" />
		<result property="projectId" column ="project_id" />
		<result property="projectName" column ="project_name" />
		<result property="plotId" column ="plot_id" />
		<result property="plotName" column ="plot_name" />
		<result property="plotSize" column ="plot_size" />
		<result property="franchiseeId" column ="franchisee_id" />
		<result property="franchiseeName" column ="franchisee_name" />
		<result property="memberId" column ="member_id" />
		<result property="memberName" column ="member_name" />
		<result property="nomineeName" column ="nominee_name" />
		<result property="nomineeFather" column ="nominee_father" />
		<result property="nomineeAddress" column ="nominee_address" />
		<result property="nomineeRelation" column ="nominee_relation" />
		<result property="nomineeDobLong" column ="nominee_dob" />
		<result property="remarks" column ="remarks" />
		<result property="price" column ="price" />
		<result property="paymentMadeTillNow" column ="payment_made_till_now" />
		<result property="emi" column ="emi" />
		<result property="noOfEmi" column ="no_of_emi" />
		<result property="emiPrice" column ="emi_price" />
		<result property="nextEmiOn" column ="next_emi_on" />
		<result property="memberCode" column ="member_code" />
		<result property="email" column ="email" />
		<result property="phone2" column ="phone2" />
		<result property="phone1" column ="phone1" />
		<result property="interestRate" column ="interest_rate" />
		<result property="ratePerYard" column ="rate_per_yard" />
		<result property="downPayment" column ="down_payment" />
		<result property="paymentSchemeId" column ="payment_scheme_id" />
		<result property="createdBy" column="created_by" />
		<result property="createdAt" column="created_at" />
		<result property="updatedBy" column="updated_by" />
		<result property="allotmentLetterGiven" column="allotment_letter_given" />
		<result property="updatedAt" column="updated_at" />
		<result property="recordStatus" column="record_status" />
		<result property="address1" column="address1" />
		<result property="state1" column="state1" />
		<result property="city1" column ="city1"/>
		<result property="title" column ="title"/>
		<result property="pincode1" column="pincode1" />
		<result property="remainingPayment" column="remaining_payment" />
		<result property="month" column ="month" />
		<result property="bookingCount" column ="booking_count" />
	</resultMap>
		
	<resultMap id="bookingResultListMap" type="Map" >
			<result property="bookingId" column ="booking_id" />
		<result property="bookingCode" column ="booking_code" />
		<result property="projectId" column ="project_id" />
		<result property="projectName" column ="project_name" />
		<result property="plotId" column ="plot_id" />
		<result property="plotName" column ="plot_name" />
		<result property="plotSize" column ="plot_size" />
		<result property="franchiseeId" column ="franchisee_id" />
		<result property="franchiseeName" column ="franchisee_name" />
		<result property="memberId" column ="member_id" />
		<result property="memberName" column ="member_name" />
		<result property="nomineeName" column ="nominee_name" />
		<result property="nomineeFather" column ="nominee_father" />
		<result property="nomineeAddress" column ="nominee_address" />
		<result property="nomineeRelation" column ="nominee_relation" />
		<result property="nomineeDob" column ="nominee_dob" />
		<result property="remarks" column ="remarks" />
		<result property="price" column ="price" />
		<result property="paymentMadeTillNow" column ="payment_made_till_now" />
		<result property="emi" column ="emi" />
		<result property="noOfEmi" column ="no_of_emi" />
		<result property="emiPrice" column ="emi_price" />
		<result property="nextEmiOn" column ="next_emi_on" />
		<result property="memberCode" column ="member_code" />
		<result property="email" column ="email" />
		<result property="phone2" column ="phone2" />
		<result property="phone1" column ="phone1" />
		<result property="interestRate" column ="interest_rate" />
		<result property="ratePerYard" column ="rate_per_yard" />
		<result property="downPayment" column ="down_payment" />
		<result property="paymentSchemeId" column ="payment_scheme_id" />
		<result property="createdBy" column="created_by" />
		<result property="createdAt" column="created_at" />
		<result property="updatedBy" column="updated_by" />
		
		<result property="updatedAt" column="updated_at" />
		<result property="recordStatus" column="record_status" />	</resultMap>
	
	<select id="getBookingDetailsById" parameterType="String" resultMap="BookingMap">
		SELECT b.booking_id, b.booking_code, b.project_id, b.project_name, b.plot_id, 
	       b.plot_name, b.plot_size, b.franchisee_id, b.franchisee_name, b.member_id, 
	       b.member_name, b.nominee_name, b.nominee_father, b.nominee_address, b.nominee_relation, 
	       b.nominee_dob, b.remarks, b.price, b.payment_made_till_now, b.emi, b.no_of_emi, 
	       b.emi_price, b.next_emi_on,b.interest_rate,b.rate_per_yard,
	       b.down_payment,b.payment_scheme_id,m.phone1,m.phone2,m.email,m.member_code,b.record_status,
	       m.address1, m.state1, m.city1, m.pincode1,ps.title,ps.payment_scheme_id,ps.title,b.created_at,b.remaining_payment,
	       b.allotment_letter_given
  		FROM bookings b
  		INNER JOIN members m
  			ON m.member_id=b.member_id
  		INNER JOIN payment_schemes ps
  			ON ps.payment_scheme_id=b.payment_scheme_id
  		WHERE b.booking_id=#{bookingId} AND b.record_status !='D'
  	</select>
	<select id="fetchBookingList" parameterType="JQTableUtils" resultMap="BookingMap">
		SELECT b.booking_id, b.booking_code, b.project_id, b.project_name, b.plot_id, 
	       b.plot_name, b.plot_size, b.franchisee_id, b.franchisee_name, b.member_id, 
	       b.member_name, b.nominee_name, b.nominee_father, b.nominee_address, b.nominee_relation, 
	       b.nominee_dob, b.remarks, b.price, b.payment_made_till_now, b.emi, b.no_of_emi, 
	       b.emi_price, b.next_emi_on,m.phone1,m.phone2,m.email,m.member_code,b.interest_rate,b.rate_per_yard,
	       b.down_payment,b.payment_scheme_id
  		FROM bookings b
  		INNER JOIN members m
  			ON m.member_id=b.member_id
  		WHERE b.record_status!='D'
  		<if test="JQTableUtils.searchParams!=''">
			AND
			(
			b.booking_code ilike #{JQTableUtils.searchParams}
			OR
			b.project_name ilike #{JQTableUtils.searchParams}
			OR
			b.plot_name ilike #{JQTableUtils.searchParams}
			OR
			b.franchisee_name ilike #{JQTableUtils.searchParams}
			OR
			b.member_name ilike #{JQTableUtils.searchParams}
			OR
			m.member_code  ilike #{JQTableUtils.searchParams}
			OR
			m.phone1 ilike #{JQTableUtils.searchParams}
			OR 
			m.phone2 ilike #{JQTableUtils.searchParams}
			OR
			m.email ilike #{JQTableUtils.searchParams}
			)
		</if>
		ORDER BY
		<choose>
			<when test="JQTableUtils.sortColumn == 0">
				b.project_name
			</when>
			<when test="JQTableUtils.sortColumn == 1">
				b.booking_code
			</when>
			<when test="JQTableUtils.sortColumn == 2">
				b.plot_name
			</when>
			<when test="JQTableUtils.sortColumn == 3">
				b.franchisee_name
			</when>
			<when test="JQTableUtils.sortColumn == 4">
				b.member_name
			</when>
			<when test="JQTableUtils.sortColumn == 5">
				m.member_code
			</when>
			<when test="JQTableUtils.sortColumn == 6">
				m.phone1
			</when>
			<when test="JQTableUtils.sortColumn == 7">
				m.email
			</when>
			<otherwise>
				b.created_at
			</otherwise>
		</choose>
		<choose>
			<when test="JQTableUtils.sortingDirection == 'asc'">
				ASC
			</when>
			<otherwise>
				DESC
			</otherwise>
		</choose> 
		<if test="JQTableUtils.iDisplayLength!=-1">
			LIMIT #{JQTableUtils.iDisplayLength}
			OFFSET #{JQTableUtils.iDisplayStart}
		</if>
		
	</select>
	
	<select id="fetchTotalBookingList" parameterType="JQTableUtils" resultType="Long">
		SELECT count(booking_id)
  		FROM bookings b
  		INNER JOIN members m
  			ON m.member_id=b.member_id
  		WHERE b.record_status!='D'
  		<if test="JQTableUtils.searchParams!=''">
			AND
			(
			b.booking_code ilike #{JQTableUtils.searchParams}
			OR
			b.project_name ilike #{JQTableUtils.searchParams}
			OR
			b.plot_name ilike #{JQTableUtils.searchParams}
			OR
			b.franchisee_name ilike #{JQTableUtils.searchParams}
			OR
			b.member_name ilike #{JQTableUtils.searchParams}
			OR
			m.member_code  ilike #{JQTableUtils.searchParams}
			OR
			m.phone1 ilike #{JQTableUtils.searchParams}
			OR 
			m.phone2 ilike #{JQTableUtils.searchParams}
			OR
			m.email ilike #{JQTableUtils.searchParams}
			)
		</if>
		
	</select>
	
	<select id="fetchBookingListByDate" parameterType="Map" resultMap="bookingResultListMap">
		SELECT b.booking_id, b.booking_code, b.project_id, b.project_name, b.plot_id, 
	       b.plot_name, b.plot_size, b.franchisee_id, b.franchisee_name, b.member_id, 
	       b.member_name, b.nominee_name, b.nominee_father, b.nominee_address, b.nominee_relation, 
	       b.nominee_dob, b.remarks, b.price, b.payment_made_till_now, b.emi, b.no_of_emi, 
	       b.emi_price, b.next_emi_on,m.phone1,m.phone2,m.email,m.member_code,b.interest_rate,b.rate_per_yard,
	       b.down_payment,b.payment_scheme_id,CAST(to_timestamp(b.created_at/1000) AS date) as month

  		FROM bookings b
  		INNER JOIN 
  		members m
  		ON m.member_id=b.member_id
  		WHERE b.record_status=#{recordStatus}
  		AND
			b.created_at &gt;=#{startDate} 
		AND 
			b.created_at &lt;=#{endDate}
		
  		<if test="sSearch!='%%'">
			AND
			(
			b.booking_code ilike #{sSearch}
			OR
			b.project_name ilike #{sSearch}
			OR
			b.plot_name ilike #{sSearch}
			OR
			b.franchisee_name ilike #{sSearch}
			OR
			b.member_name ilike #{sSearch}
			OR
			m.member_code  ilike #{sSearch}
			OR
			m.phone1 ilike #{sSearch}
			OR 
			m.phone2 ilike #{sSearch}
			OR
			m.email ilike #{sSearch}
			
			)
		</if>

		<choose>
			 <when test="columnName != ''">
			 ORDER BY	${columnName} ${sSortDir}
			</when>
			
			<otherwise>
			 ORDER BY	b.created_at desc
			</otherwise>
		</choose>
	
			LIMIT ${iDisplayLength}
			OFFSET ${iDisplayStart}
		
	</select>
	
	<insert id="addBooking" parameterType="BookingModel">
		INSERT INTO bookings(
            booking_id, booking_code, project_id, project_name, plot_id, 
            plot_name, plot_size, franchisee_id, franchisee_name, member_id, 
            member_name, nominee_name, nominee_father, nominee_address, nominee_relation, 
            nominee_dob, remarks, price, payment_made_till_now, emi, no_of_emi, 
            next_emi_on, created_by, updated_by, created_at, updated_at, 
            record_status, interest_rate, rate_per_yard, down_payment, payment_scheme_id,remaining_payment)
    	VALUES (#{bookingId}, #{bookingCode}, #{projectId}, #{projectName}, #{plotId}, 
            #{plotName}, #{plotSize}, #{franchiseeId}, #{franchiseeName}, #{memberId}, 
            #{memberName}, #{nomineeName}, #{nomineeFather}, #{nomineeAddress}, #{nomineeRelation}, 
            #{nomineeDobLong}, #{remarks}, #{price}, 0, #{emi}, #{noOfEmi}, 
            #{nextEmiOn}, #{createdBy}, #{updatedBy}, #{createdAt}, #{updatedAt}, 
            'A', #{interestRate}, #{ratePerYard}, #{downPayment}, #{paymentSchemeId}, #{remainingPayment});
	</insert>
	
	
	<select id="fetchBookingListByCurrentYear" parameterType="map"	resultMap="BookingMap">
		SELECT 
			COUNT(*) as booking_count,
			EXTRACT(MONTH FROM to_timestamp(b.created_at/1000)) as month
		FROM bookings b
  		INNER JOIN members m
  							ON m.member_id=b.member_id
  		WHERE 
  			b.record_status=#{recordStatus}
		AND
			b.created_at &gt;=#{startDate} 
		AND 
			b.created_at &lt;=#{endDate}
		
		GROUP BY month
		ORDER BY month ASC	
		
	</select>
	
	<update id="changePaidPayment">
		update bookings set remaining_payment=remaining_payment+#{addRemainingBalance}, 
				payment_made_till_now=payment_made_till_now+#{paidAmount}
		WHERE booking_id=#{bookingId}
		AND record_status='A'
	</update>
	
	<update id="changePaidPaymentForCancelledBooking">
		update bookings set remaining_payment=0
		WHERE booking_id=#{bookingId}
		AND record_status='C'
	</update>
	
	<update id="changeAllotmentLetterGiven">
		update bookings set allotment_letter_given=true
		WHERE booking_id=#{bookingId}
	</update>
	
	<update id="cancelBooking">
		update bookings set record_status='C', updated_at=#{updatedAt},updated_by=#{updatedBy}
		WHERE booking_id=#{bookingId}
	</update>
	
	<select id="transferBookingCheck" resultType="boolean">
		select count(*) from bookings 
		WHERE member_id=#{memberId} AND booking_id!=#{bookingId} AND record_status='A'
	</select>
	<select id="transferBookingIds" resultType="map">
		select booking_id as id,booking_code as code from bookings 
		WHERE member_id=#{memberId} AND booking_id!=#{bookingId} AND record_status='A'
	</select>
	<select id="fethBookedPlotsIdListOfProjects"  resultType="String">
		SELECT  b.plot_id
  		FROM bookings b
  		INNER JOIN 
  		members m
  		ON m.member_id=b.member_id
  			WHERE b.record_status='A'
  		
   </select>
   
   
   	<select id="fetchTotalBookingListByDate" parameterType="Map" resultType="Long">
		SELECT count(b.booking_id)
  		FROM bookings b
  		INNER JOIN 
  		members m
  		ON m.member_id=b.member_id
  		WHERE b.record_status=#{recordStatus}
  		AND
			b.created_at &gt;=#{startDate} 
		AND 
			b.created_at &lt;=#{endDate}
		
  		<if test="sSearch!='%%'">
			AND
			(
			b.booking_code ilike #{sSearch}
			OR
			b.project_name ilike #{sSearch}
			OR
			b.plot_name ilike #{sSearch}
			OR
			b.franchisee_name ilike #{sSearch}
			OR
			b.member_name ilike #{sSearch}
			OR
			m.member_code  ilike #{sSearch}
			OR
			m.phone1 ilike #{sSearch}
			OR 
			m.phone2 ilike #{sSearch}
			OR
			m.email ilike #{sSearch}
			
			)
		</if>

	</select>
	
</mapper> 